/*******************************
            Input
*******************************/

/*-------------------
      Element
--------------------*/

.ui.form .ui.input,
.ui.input {
  max-width: @inputMaxWidth;
  width: @inputWidth;

  /*-------------------
          Types
  --------------------*/

  textarea,
  .DateRangePickerInput {
    background: @background;
    border: @border;
    font-family: @inputFont;
    outline: none;
    width: @inputWidth;
  }

  textarea {
    padding: @padding;
  }

  .DateRangePicker {
    width: @inputWidth;

    .DateRangePickerInput {
      color: @labelColor;

      button.DateRangePickerInput_calendarIcon,
      .DateRangePickerInput_arrow {
        color: inherit;
        margin: 0;
        outline: none;
        padding: @dateRangePickerInputPadding;

        i {
          margin: 0;
        }
      }

      .DateInput {
        box-sizing: content-box;

        &,
        input {
          background: transparent;
          color: inherit;
          font-family: inherit;
          font-size: inherit;
          font-weight: @normal;
          line-height: inherit;
        }

        input {
          padding: @dateRangePickerDateInputPadding;

          &::placeholder {
            color: inherit;
            opacity: 1;
          }
        }

        .DateInput_fangStroke {
          stroke: transparent;
        }
      }
    }

    .DateRangePicker_picker {
      color: @dateRangePickerPickerFontColor;
      z-index: @dateRangePickerPickerZIndex;

      .DayPicker__withBorder {
        box-shadow: @dateRangePickerPickerBoxShadow;
      }

      button.DayPickerNavigation_button {
        border: none;
        padding: 0;
        top: @dateRangePickerPickerNavigationButtonTopSpace;
      }

      .CalendarMonth_caption {
        color: inherit;
        font-size: @fontSize;
        padding-top: @dateRangePickerPickerMonthCaptionPaddingTop;
        padding-bottom: @dateRangePickerPickerMonthCaptionPaddingBottom;

        strong {
          font-weight: @normal;
        }
      }

      .DayPicker_weekHeader {
        color: inherit;
        padding: @dateRangePickerPickerTablePadding;
        top: @dateRangePickerPickerWeekHeaderTopSpace;

        li.DayPicker_weekHeader_li {
          box-sizing: content-box;
          width: @dateRangePickerPickerWeekHeaderWidth;

          &:not(:first-child) {
            border-left: @dateRangePickerPickerTableCellBorder;
          }

          small {
            font-size: @tinyParagraphFontSize;
            text-transform: uppercase;
          }
        }
      }

      .CalendarMonth {
        padding: @dateRangePickerPickerTablePadding;

        table.CalendarMonth_table {
          td.CalendarDay {
            border: none;
            box-sizing: content-box;
            font-size: @tinyParagraphFontSize;
            font-weight: @tinyParagraphFontWeight;
            height: @dateRangePickerPickerTableCellHeight;
            padding: 0;
            width: @dateRangePickerPickerTableCellWidth;

            &:not(:first-child) {
              border-left: @dateRangePickerPickerTableCellBorder;
            }

            &.CalendarDay__default:hover,
            &.CalendarDay__selected_span,
            &.CalendarDay__hovered_span {
              background: @dateRangePickerPickerDayHoveredBackground;
              color: inherit;
            }

            &.CalendarDay__selected {
              &,
              &:active,
              &:hover {
                background: @dateRangePickerPickerDaySelectedBackground;
                color: inherit;
              }
            }

            &.CalendarDay__blocked_calendar,
            &.CalendarDay__blocked_out_of_range {
              &,
              &:hover, {
                background: @dateRangePickerPickerDayBlockedBackground;
                color: @dateRangePickerPickerDayBlockedFontColor;
              }
            }
          }

          tr:not(:first-child) td.CalendarDay {
            border-top: @dateRangePickerPickerTableCellBorder;
          }
        }
      }
    }
  }

  /*-------------------
          States
  --------------------*/

  /* Hover */
  &:hover:not(.error):not(.valid):not(.dirty):not(.focus) {
    input:not(:focus),
    textarea:not(:focus),
    .DateRangePickerInput {
      background: @focusedInputBackground;
      border-color: @hoveredInputBorderColor;
    }

    .DateRangePickerInput {
      input:not(.DateInput_input__focused) {
        border-color: transparent;
      }
    }
  }

  /* Dirty */
  &.dirty:not(.error):not(.valid) {
    input,
    textarea,
    .DateRangePickerInput {
      background: @focusedInputBackground;
      border-color: @focusedFormBorderColor;
    }

    .DateRangePickerInput {
      color: @focusColor;
      input:not(.DateInput_input__focused) {
        border-color: transparent;
      }
    }
  }

  /* Focus */
  textarea:focus,
  &.focus .DateRangePickerInput  {
    border-color: @focusBorderColor;
    background: @focusBackground;
    color: @focusColor;
  }

  .DateRangePicker .DateRangePickerInput input.DateInput_input__focused {
    border-bottom: @dateRangePickerInputFocusedBorderBottom;
    margin-bottom: @dateRangePickerInputFocusedMarginBottom;
  }

  /* Error */
  &.error {
    input,
    textarea,
    .DateRangePickerInput {
      background: @errorBackground;
      border-color: @errorBorder;
    }

    .DateRangePickerInput {
      color: @focusColor;
      input:not(.DateInput_input__focused) {
        border-color: transparent;
      }
    }

    .ui.pointing.below.label {
      font-weight: @errorMessageFontWeight;
      padding: @errorMessagePadding;
      position: absolute;
      right: @errorMessageRightPosition;
      top: @errorMessageTopPosition;

      &:before {
        left: unset;
        right: 6px;
      }
    }
  }

  /* Valid */
  &.valid {
    input,
    textarea,
    .DateRangePickerInput  {
      background: @focusedInputBackground;
      border-color: @validBorderColor;
    }

    .DateRangePickerInput {
      color: @focusColor;
      input:not(.DateInput_input__focused) {
        border-color: transparent;
      }
    }

    i.big.green.checkmark.icon {
      position: absolute;
      right: @inputHorizontalPadding;
      top: @validIconPositionTop;
      z-index: @validIconZIndex;
    }
  }

  /*-------------------
        Variations
  --------------------*/

  /* Labeled */
  label {
    color: @labelColor;
    cursor: text;
    left: @inputHorizontalPadding;
    position: absolute;
    top: @inputVerticalPadding;
    transition: transform @defaultDuration, font-size @defaultDuration;
  }

  input:focus + label,
  textarea:focus + label,
  &.dirty > label {
    color: @labelFocusColor;
    font-size: @labelFocusFontSize;
    transform: translate(-(@labelFocusYTranslate), -(@labelFocusXTranslate));
  }
}
